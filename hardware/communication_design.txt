characters:
character set is all printable ascii values with a few exceptions, so 32-127, these are translated as such:
    0: 0 (terminator usually), exception
    1: 32
    2: 33
    ...
    95: 126
special translations:    
    96: carriage return (\r)
    97: line feed / newline (\n)
    98: tab (\t)
    99: bell (because why noooooooooot lmao)


control signals:
    8 bits words are sent every time. a 1 in the first bit means it's something control related.
    when from host side, after sending a program, anything with a 1 there means end of sent program, and program should start running, standard is 0xfe (one under ff which is kill program).
    during regular operations, a 0xff means stop running, start listening for program
    when input is requested from user, host responds with all characters using the character set, then with a null to signify end
    likewise when stuff is printed, just sent and then null terminated if you want.
    a 0x80 is sent from client to mean ask user for input. works like in python with input(), where you get a line of input
    a 0x81 is sent to ask for one char of any kind
    a 0x82 ask for how many chars of input are waiting, 0 if nothing is waiting, if it's over 99 then expects 99.
    lastly, 0xf0-0xff from the processor is for exceptions and control, so when program ends and such

note that words are sent in big-endian

overview of messages:
    from host:
        0xff: restart and wait for program
        0b1xxx_xxxx: after sending program, means done, standard is 0xfe
    
    from processor:
        0x80: waiting for one char of input
        0x81: waiting for null-terminated input line
        0x82: waiting for 3 chars - meaning one word of input
        0x83: waiting for null-terminated input of words, so null-terminator is a word of 3 zeros.
        0x84: is there input waiting?
        
        0x90: sending a whole number/word, not just single value
        0x91: sending word list, not just char

        // exceptions & control
        0xf0: unknown opcode
        0xf1: unknown register
        0xf2: unknown syscall number

        0xff: program ended successfully